name: Docker and AWS
on:
  workflow_dispatch:
  push:
    branches: main
      
jobs:

  BuildDocker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Docker Build
      uses: docker/setup-buildx-action@v2.2.1
      
    - name: Docker Login
      uses: docker/login-action@v2.1.0
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
        
    - name: Build and push Docker images
      uses: docker/build-push-action@v3.2.0
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: pablofischer/app-node:2.0
        
  AWSInfra:
    name: AWS Infra
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Application
        uses: actions/checkout@v3
    
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.13.5
          
      - name: Terraform Fmt
        id: fmt
        run: |
          cd terraform/
          terraform fmt
        continue-on-error: false

      - name: Terraform Init
        id: init
        run: |
          cd terraform/
          terraform init
        continue-on-error: false
      
      - name: Terraform Plan
        id: plan
        run: |
          cd terraform/
          terraform plan
        continue-on-error: false

      - name: Terraform Apply
        id: apply
        run: |
          cd terraform/
          terraform apply -auto-approve
        continue-on-error: false
        
  DeployDocker:

    name: Deploying Docker
    runs-on: ubuntu-latest
    steps:
    
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1
      
      - name: Checkout Application
        uses: actions/checkout@v3

      - name: Wait
        run: sleep 150s
        continue-on-error: false
        
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x, 15.x]
        
        uses: actions/checkout@v3
        name: Use Node.js ${{ matrix.node-version }}
 
        with:
          nove-version: ${{ matrix.node-version }}
        run: |
          npm ci
          npm run build --if-present
          npm test
        
    
    
