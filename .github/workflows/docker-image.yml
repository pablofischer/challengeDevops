name: Docker and AWS
on:
  workflow_dispatch:
  push:
    branches: 
    - "main"
      
jobs:

  BuildDocker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Docker Build
      uses: docker/setup-buildx-action@v2.2.1
      
    - name: Docker Login
      uses: docker/login-action@v2.1.0
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
        
    - name: Build and push Docker images
      uses: docker/build-push-action@v3.2.0
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: pablofischer/app-node:2.0
        
  AWSInfra:
    name: AWS Infra
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Application
        uses: actions/checkout@v3
    
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.13.5
          
      - name: Terraform Plan
        id: Plan
        run: |
          cd terraform/
          terraform init
          terraform plan
          terraform apply -auto-approve
        continue-on-error: false
        
  DeployDocker:
    needs: [BuildDocker, AWSInfra] #identifies jobs that need to complete successfully before this job runs;
    name: Deploying Docker
    runs-on: ubuntu-latest
    steps:
    
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1
      
      - name: Checkout Application
        uses: actions/checkout@v3

      - name: Wait
        run: sleep 200s
        continue-on-error: false
        
      - name: Deploy Container
        run: |
          nohup aws ssm send-command \
          --document-name "AWS-RunShellScript" \
          --parameters commands="sudo docker run -d -p 8080:3000 pablofischer/app-node:2.0" \
          --targets Key=tag:Name,Values=ChallengeDevops
          
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.13.5
          
      - name: EC2 IP
        run: | 
          cd terraform/
          terraform init && terraform output
